services:
  redis-ai:
    image: redis:7
    container_name: redis-ai
    ports:
      - "6380:6379"
    volumes:
      - redis-data:/data

  needs-worker:
    build: .
    container_name: needs-worker
    entrypoint: ["python"]
    command: ["workers/needs_worker.py"]
    volumes:
      - .:/app
    working_dir: /app
    environment:
      - REDIS_HOST=redis-ai
      - REDIS_PORT=6379
    ports:
      - "9001:9001"
    depends_on:
      - redis-ai

  opportunity-agent:
    build: .
    container_name: opportunity-agent
    entrypoint: ["python"]
    command: ["agents/opportunity_agent.py"]
    volumes:
      - .:/app
    working_dir: /app
    ports:
      - "9003:9003"
    depends_on:
      - redis-ai

  supplier-agent:
    build: .
    container_name: supplier-agent
    entrypoint: ["python"]
    command: ["agents/supplier_agent.py"]
    volumes:
      - .:/app
    working_dir: /app
    ports:
      - "9005:9005"
    depends_on:
      - redis-ai

  merchant-agent:
    build: .
    container_name: merchant-agent
    entrypoint: ["python"]
    command: ["agents/merchant_agent.py"]
    volumes:
      - .:/app
    working_dir: /app
    ports:
      - "9004:9004"
    depends_on:
      - supplier-agent
      - opportunity-agent

  match-agent:
    build: .
    container_name: match-agent
    entrypoint: ["python"]
    command: ["agents/match_agent.py"]
    volumes:
      - .:/app
    working_dir: /app
    environment:
      - NEED_RPC_URL=http://needs-worker:9001
      - OFFER_RPC_URL=http://opportunity-agent:9003
    ports:
      - "9002:9002"
    depends_on:
      - needs-worker
      - opportunity-agent

  insight-worker:
    build: .
    container_name: insight-worker
    entrypoint: ["python"]
    command: ["workers/insight_worker.py"]
    volumes:
      - .:/app
    working_dir: /app
    ports:
      - "9008:9006"
    depends_on:
      - match-agent

  dashboard:
    build: .
    container_name: dashboard
    entrypoint: ["streamlit"]
    command:
      - run
      - dashboard/streamlit_app.py
      - --server.port
      - "8501"
      - --server.address
      - "0.0.0.0"
      - --server.fileWatcherType
      - "none"
    volumes:
      - .:/app
    working_dir: /app
    ports:
      - "8502:8501"
    environment:
      # For streamlit_app.py MCP calls
      - NEED_BASE_URL=http://needs-worker:9001
      - OFFER_BASE_URL=http://opportunity-agent:9003
      - SUPPLY_BASE_URL=http://supplier-agent:9005
      - MATCH_BASE_URL=http://match-agent:9002
      - PREDICTION_BASE_URL=http://insight-worker:9006 # streamlit_app.py expects service on 9006
      # Externalized configurations for the dashboard itself
      - LOG_LEVEL=${LOG_LEVEL:-INFO} 
      - DEFAULT_CACHE_TTL_SECONDS=${DEFAULT_CACHE_TTL_SECONDS:-10}
      - STREAMLIT_PAGE_TITLE=${STREAMLIT_PAGE_TITLE:-AI Agent Ecosystem Dashboard}
      # REDIS variables from your snippet (streamlit_app.py doesn't use them directly currently)
      - REDIS_HOST=redis-ai
      - REDIS_PORT=6379
    depends_on:
      - needs-worker
      - opportunity-agent
      - supplier-agent
      - match-agent
      - insight-worker

  entity-need-creator:
    build: .
    container_name: entity-need-creator
    entrypoint: ["python"]
    command: ["workers/entity_need_creator.py"]
    volumes:
      - .:/app
    working_dir: /app
    depends_on:
      - needs-worker

  supplier-product-creator:
    build: .
    container_name: supplier-product-creator
    entrypoint: ["python"]
    command: ["workers/supplier_product_creator.py"]
    volumes:
      - .:/app
    working_dir: /app
    depends_on:
      - supplier-agent

  merchant-simulator:
    build: .
    container_name: merchant-simulator
    entrypoint: ["python"]
    command: ["workers/merchant_simulator.py"]
    volumes:
      - .:/app
    working_dir: /app
    depends_on:
      - supplier-agent
      - opportunity-agent

  basic-client:
    build: .
    container_name: basic-client
    entrypoint: ["python"]
    command: ["workers/basic_client.py"]
    volumes:
      - .:/app
    working_dir: /app
    depends_on:
      - needs-worker

  ngrok:
    image: ngrok/ngrok:latest
    command: [
      "http",
      "--url=https://default.internal",
      "http://dashboard:8501"
    ]
    environment:
      NGROK_AUTHTOKEN: "7h9r3gqggN2GgxrHt9puc_7oDr6uCGh3XNHaSj9cBq6"      
    container_name: ngrok-tunnel
    depends_on:
      - dashboard
    ports:
      - 4040:4040

volumes:
  redis-data:
